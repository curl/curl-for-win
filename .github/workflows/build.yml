# Copyright (C) Viktor Szakats. See LICENSE.md
# SPDX-License-Identifier: MIT
---
# https://docs.github.com/actions/learn-github-actions
name: build
on:
  push:
    branches:
      - main
      - dev
      - test

permissions: {}

env:
  CW_MAP: '1'
  CW_JOBS: '3'
  DO_NOT_TRACK: '1'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'build'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-linux'
          export CW_REVISION='${{ github.sha }}'
          . ./_versions.sh
          time docker pull "${DOCKER_IMAGE}"
          docker images --digests
          time docker run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|GITHUB_|DO_NOT_TRACK)') \
            "${DOCKER_IMAGE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-linux'
          retention-days: 5
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-debian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'build'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-linux-gcc-musl'
          export CW_REVISION='${{ github.sha }}'
          . ./_versions.sh
          time docker pull "${DOCKER_IMAGE}"
          docker images --digests
          time docker run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|GITHUB_|DO_NOT_TRACK)') \
            "${DOCKER_IMAGE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-linux-musl-debian'
          retention-days: 5
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-alpine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'build'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-linux'
          export CW_REVISION='${{ github.sha }}'
          DOCKER_IMAGE='alpine:latest'
          time docker pull "${DOCKER_IMAGE}"
          docker images --digests
          time docker run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|GITHUB_|DO_NOT_TRACK)') \
            "${DOCKER_IMAGE}" \
            sh -c 'apk add --no-cache bash && ./_ci-linux-alpine.sh'

      - name: 'list dependencies'
        run: cat urls.txt
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-linux-musl-alpine'
          retention-days: 5
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-from-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'build'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-linux'
          export CW_REVISION='${{ github.sha }}'
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-linux-musl-from-mac'
          retention-days: 5
          path: |
            *-*-linux*.*
            urls.txt

  mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'build'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-mac-macuni'
          export CW_REVISION='${{ github.sha }}'
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-macos-universal'
          retention-days: 5
          path: |
            *-*-macos*.*
            urls.txt

  win:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 8
      - name: 'build'
        env:
          CW_LLVM_MINGW_DL: '1'
          CW_LLVM_MINGW_ONLY: '0'
        run: |
          export CW_CONFIG='${{ github.ref_name }}-win'
          export CW_REVISION='${{ github.sha }}'
          . ./_versions.sh
          time docker pull "${DOCKER_IMAGE}"
          docker images --digests
          time docker run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|GITHUB_|DO_NOT_TRACK)') \
            "${DOCKER_IMAGE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v3
        with:
          name: 'curl-windows'
          retention-days: 5
          path: |
            *-*-mingw*.*
            urls.txt
