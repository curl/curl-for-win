# Copyright (C) Viktor Szakats. See LICENSE.md
# SPDX-License-Identifier: MIT
---
# https://docs.github.com/actions/learn-github-actions
# https://github.com/actions/upload-artifact
name: build
'on':
  push:
    branches:
      - main
      - dev
      - test

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

permissions: {}

env:
  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  CW_MAP: '1'
  CW_JOBS: '5'
  DO_NOT_TRACK: '1'

jobs:
  linters:
    name: 'linters'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: 'install prereqs'
        run: |
          /home/linuxbrew/.linuxbrew/bin/brew install shellcheck zizmor
          python3 -m venv ~/venv
          ~/venv/bin/pip --disable-pip-version-check --no-input --no-cache-dir install --progress-bar off --prefer-binary -r .github/workflows/requirements.txt

      - name: 'REUSE check'
        run: |
          source ~/venv/bin/activate
          reuse lint

      - name: 'zizmor GHA'
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          zizmor --pedantic .github/workflows/*.yml .github/dependabot.yml

      - name: 'shellcheck GHA'
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          shellcheck --version
          export SHELLCHECK_OPTS='--exclude=1090,1091,2086,2153 --enable=avoid-nullary-conditions,deprecate-which'
          git ls-files '.github/workflows/*.yml' | while read -r f; do
            echo "Verifying ${f}..."
            {
              echo '#!/usr/bin/env bash'
              echo 'set -eu'
              yq eval '.. | select(has("run") and (.run | type == "!!str")) | .run + "\ntrue\n"' "${f}"
            } | sed -E 's|\$\{\{ .+ \}\}|GHA_EXPRESSION|g' | shellcheck -
          done

      - name: 'shellcheck'
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          shellcheck --version
          shellcheck --exclude=1091 \
            --enable=avoid-nullary-conditions,deprecate-which,quote-safe-variables,require-variable-braces \
            ./*.sh

      - name: 'codespell'
        run: |
          source ~/venv/bin/activate
          codespell --version
          # shellcheck disable=SC2046
          codespell --skip='*.asc,*.patch,*.pem' \
            --ignore-words '.github/workflows/codespell-ignore.words' \
            $(git ls-files)

      - name: 'ruff'
        run: |
          source ~/venv/bin/activate
          ruff --version
          # shellcheck disable=SC2046
          ruff check --extend-select=B007,B016,C405,C416,COM818,D200,D213,D204,D401,D415,FURB129,N818,PERF401,PERF403,PIE790,PIE808,PLW0127,Q004,RUF010,SIM101,SIM117,SIM118,TRY400,TRY401 \
            $(git ls-files '*.py')

  linux-glibc-debian-testing-llvm:
    name: 'linux-glibc-debian-testing-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-a64-x64"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-glibc-debian-testing-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-glibc-debian-testing-gcc:
    name: 'linux-glibc-debian-testing-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-glibc-debian-testing-gcc'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-glibc-debian-stable-llvm:
    name: 'linux-glibc-debian-stable-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-a64-x64"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_CCSUFFIX='-19'
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_STABLE}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_STABLE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-glibc-debian-stable-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-glibc-debian-stable-gcc:
    name: 'linux-glibc-debian-stable-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_STABLE}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_STABLE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-glibc-debian-stable-gcc'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-debian-testing-llvm:
    name: 'linux-musl-debian-testing-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-musl"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-debian-testing-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-debian-testing-gcc:
    name: 'linux-musl-debian-testing-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-musl-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-debian-testing-gcc'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-debian-stable-llvm:
    name: 'linux-musl-debian-stable-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-musl"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_CCSUFFIX='-19'
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_STABLE}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_STABLE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-debian-stable-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-debian-stable-gcc:
    name: 'linux-musl-debian-stable-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-musl-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          export CW_GCCSUFFIX='-14'
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_STABLE}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_STABLE}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-debian-stable-gcc'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-alpine-llvm:
    name: 'linux-musl-alpine-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_ALPINE_LATEST}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_ALPINE_LATEST}" \
            sh -c 'apk add --no-cache bash && ./_ci-linux-alpine.sh'

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-alpine-llvm-x86_64'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-alpine-gcc:
    name: 'linux-musl-alpine-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_ALPINE_LATEST}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_ALPINE_LATEST}" \
            sh -c 'apk add --no-cache bash && ./_ci-linux-alpine.sh'

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-alpine-gcc-x86_64'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  linux-musl-from-mac:
    name: 'linux-musl-from-mac'
    runs-on: 'macos-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-linux"
          export CW_REVISION="${GITHUB_SHA}"
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-linux-musl-from-mac'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-linux*.*
            urls.txt

  mac-clang:
    name: 'mac-clang'
    runs-on: 'macos-latest'
    timeout-minutes: 30
    env:
      CW_JOBS: '4'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-mac-macuni"
          export CW_REVISION="${GITHUB_SHA}"
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-macos-universal-clang'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-macos*.*
            urls.txt

  mac-llvm:
    name: 'mac-llvm'
    runs-on: 'macos-latest'
    timeout-minutes: 30
    env:
      CW_JOBS: '4'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-mac-macuni-llvm"
          export CW_REVISION="${GITHUB_SHA}"
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-macos-universal-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-macos*.*
            urls.txt

  mac-gcc:
    name: 'mac-gcc'
    runs-on: 'macos-latest'
    timeout-minutes: 30
    env:
      CW_JOBS: '4'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
        run: |
          export CW_CCSUFFIX='-15'
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-mac-gcc-a64"
          export CW_REVISION="${GITHUB_SHA}"
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-macos-gcc-arm64'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-macos*.*
            urls.txt

  win-llvm-from-mac:
    name: 'win-llvm-from-mac'
    runs-on: 'macos-latest'
    timeout-minutes: 30
    env:
      CW_JOBS: '4'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
          CW_LLVM_MINGW_DL: '1'
          CW_LLVM_MINGW_ONLY: '1'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-win"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sh -c ./_ci-mac-homebrew.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-windows-llvm-from-mac'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-mingw*.*
            urls.txt

  win-llvm:
    name: 'win-llvm'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
          CW_LLVM_MINGW_DL: '1'
          CW_LLVM_MINGW_ONLY: '1'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-win"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-windows-llvm'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-mingw*.*
            urls.txt

  win-gcc:
    name: 'win-gcc'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: '300'
      - name: 'build'
        env:
          COSIGN_PKG_GPG_PASS: '${{ secrets.COSIGN_PKG_GPG_PASS }}'
          COSIGN_PKG_KEY_PASS: '${{ secrets.COSIGN_PKG_KEY_PASS }}'
          CW_LLVM_MINGW_DL: '1'
          CW_LLVM_MINGW_ONLY: '0'
        run: |
          export CW_CONFIG="${GITHUB_REF_NAME}-werror-win-gcc"
          export CW_REVISION="${GITHUB_SHA}"
          . ./_versions.sh
          sudo podman image trust set --type reject default
          sudo podman image trust set --type accept docker.io/library
          time podman pull "${OCI_IMAGE_DEBIAN_TESTING}"
          podman images --digests
          time podman run --volume "$(pwd):$(pwd)" --workdir "$(pwd)" \
            --env-file <(env | grep -a -E \
              '^(CW_|COSIGN_|GITHUB_|DO_NOT_TRACK)') \
            "${OCI_IMAGE_DEBIAN_TESTING}" \
            sh -c ./_ci-linux-debian.sh

      - name: 'list dependencies'
        run: cat urls.txt ./*-version-*.txt || true
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: 'curl-windows-gcc-x64'
          retention-days: ${{ github.ref_name == 'main' && 90 || 5 }}
          path: |
            *-*-mingw*.*
            urls.txt
